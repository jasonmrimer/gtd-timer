create table event
(
    id            int generated by default as identity not null,
    user_id       int unique                           not null,
    timer_seconds int                                  not null default 120,
    start         timestamp                            not null,
    end           timestamp                            not null,
    primary key (id),
    foreign key (user_id) references USER (id) on delete cascade
);

create trigger event_insert_with_fetched_timer
    before insert
    on event
    referencing new as new_event
    for each row mode db2sql
begin
    atomic
    set new_event.timer_seconds = (
        select timer.seconds
        from timer
        where timer.user_id = new_event.user_id
    );
end;